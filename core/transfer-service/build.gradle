plugins {
  id 'org.springframework.boot' version '3.3.2'
  id 'io.spring.dependency-management' version '1.1.5'
  id 'java'
  id 'jacoco'
}

group = 'com.paystream'
version = '0.0.1-SNAPSHOT'

java {
  toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

repositories {
  mavenCentral()
}

ext {
  springCloudVersion = '2023.0.3'  // Boot 3.3.x ile uyumlu
}

dependencies {
  // --- Spring starters ---
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'

  // --- Cloud (Eureka + LB) ---
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

  // --- OpenAPI UI ---
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

  // --- DB & Migrations ---
  runtimeOnly   'org.postgresql:postgresql:42.7.3'
  implementation 'org.flywaydb:flyway-core'
  implementation 'org.flywaydb:flyway-database-postgresql'

  // --- Lombok (opsiyonel) ---
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  // --- Test ---
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation platform('org.testcontainers:testcontainers-bom:1.19.8')
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    html.required = true
    xml.required = true
  }
}
