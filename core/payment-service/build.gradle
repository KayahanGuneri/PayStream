plugins {
  id 'org.springframework.boot'            // versiyonu root'taki pluginManagement belirler
  id 'io.spring.dependency-management'
  id 'java'
  id 'jacoco'
}

group = 'com.paystream'
version = '0.0.1-SNAPSHOT'

java {
  toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

repositories {
  mavenCentral()
}

ext {
  springCloudVersion    = "2023.0.3"
  testcontainersVersion = "1.20.2"
}

dependencies {
  // --- Application starters
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'


  // --- Persistence


  compileOnly 'org.projectlombok:lombok:1.18.34'
  annotationProcessor 'org.projectlombok:lombok:1.18.34'

  testCompileOnly 'org.projectlombok:lombok:1.18.34'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'


  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
  runtimeOnly  'org.postgresql:postgresql'             // versiyonu Boot BOM yönetir

  // --- Migrations
  implementation 'org.flywaydb:flyway-core'
  implementation 'org.flywaydb:flyway-database-postgresql'

  // --- Lombok (main + test)
  compileOnly          'org.projectlombok:lombok:1.18.34'
  annotationProcessor  'org.projectlombok:lombok:1.18.34'
  testCompileOnly      'org.projectlombok:lombok:1.18.34'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

  // --- Testing
  testImplementation 'org.springframework.boot:spring-boot-starter-test'   // JUnit + AssertJ + Mockito + MockMvc
  testImplementation "org.springframework.boot:spring-boot-testcontainers"
  testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
  testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
  testImplementation 'com.h2database:h2'


  // Eğer JUnit sürümünü sabitlemek istersen (opsiyonel):
  // testImplementation platform("org.junit:junit-bom:5.10.2")
  // testImplementation "org.junit.jupiter:junit-jupiter"
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
  finalizedBy tasks.jacocoTestReport // testten sonra coverage raporu üret
}

jacoco {
  toolVersion = "0.8.11"
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
    html.required = true
    csv.required = false
  }
}

// Boot uygulaması olduğu için sadece bootJar üretelim
tasks.named('jar')     { enabled = false }
tasks.named('bootJar') { enabled = true }
