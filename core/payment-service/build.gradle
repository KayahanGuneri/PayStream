plugins {
  id 'org.springframework.boot'        // <- versiyon YOK (root'tan 3.3.2 gelecek)
  id 'io.spring.dependency-management' // <- versiyon YOK
  id 'java'
}

group = 'com.paystream'
version = '0.0.1-SNAPSHOT'

java { toolchain { languageVersion = JavaLanguageVersion.of(21) } }

repositories { mavenCentral() }

ext {
  springCloudVersion = "2023.0.3"
  testcontainersVersion = "1.20.2"
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'


  compileOnly 'org.projectlombok:lombok:1.18.34'
  annotationProcessor 'org.projectlombok:lombok:1.18.34'

  testCompileOnly 'org.projectlombok:lombok:1.18.34'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'


  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
  runtimeOnly  'org.postgresql:postgresql'

  implementation 'org.flywaydb:flyway-core'
  implementation 'org.flywaydb:flyway-database-postgresql'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
  testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

tasks.withType(Test).configureEach { useJUnitPlatform() }
tasks.named('jar') { enabled = false }
tasks.named('bootJar') { enabled = true }
