plugins {
  id 'java'
  id 'org.springframework.boot' version '3.3.2'
  id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.paystream'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

repositories {
  mavenCentral()
}

dependencies {



  // === SPRING BOOT CORE ===
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'

  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

  // === DATABASE & MIGRATIONS ===
  implementation 'org.flywaydb:flyway-core'
  implementation 'org.flywaydb:flyway-database-postgresql'
  runtimeOnly 'org.postgresql:postgresql'

  // === KAFKA ===
  implementation 'org.springframework.kafka:spring-kafka'

  // === SWAGGER / OPENAPI ===
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

  // === LOMBOK ===
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  // === TEST BAÄžIMLILIKLARI ===
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.springframework.kafka:spring-kafka-test'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'
  testImplementation 'org.testcontainers:jdbc'
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
  }
}
